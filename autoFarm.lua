local Players = game:GetService("Players")
local player = Players.LocalPlayer
local workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local platformCount = 9
local fixedWaitTime = 4 -- ‡πÄ‡∏ß‡∏•‡∏≤‡∏£‡∏≠‡∏Ñ‡∏á‡∏ó‡∏µ‡πà (‡∏ß‡∏¥)

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏≤‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á DarknessPart
local function getDarknessPartPos(index)
    local success, pos = pcall(function()
        local caveStage = workspace:WaitForChild("BoatStages", 10)
            :WaitForChild("NormalStages", 10)
            :WaitForChild("CaveStage" .. index, 10)
        return caveStage:WaitForChild("DarknessPart", 10).Position
    end)
    return success and pos or nil
end

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏≤‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á GoldenChest
local function getGoldenChestPos()
    local success, pos = pcall(function()
        return workspace:WaitForChild("BoatStages", 10)
            :WaitForChild("NormalStages", 10)
            :WaitForChild("TheEnd", 10)
            :WaitForChild("GoldenChest", 10)
            :WaitForChild("Trigger", 10).Position
    end)
    return success and pos or nil
end

-- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏û
local function createPlatformAtPosition(index, position)
    local platform = Instance.new("Part")
    platform.Name = "AutoPlatform_" .. index
    platform.Size = Vector3.new(20, 2, 20)
    platform.Anchored = true
    platform.Position = position
    platform.Color = Color3.fromRGB(0, 255, 255)
    platform.Material = Enum.Material.Neon
    platform.Parent = workspace
    return platform
end

-- ‡πÄ‡∏ó‡πÄ‡∏•‡∏û‡∏≠‡∏£‡πå‡∏ï‡∏Ç‡πâ‡∏≤‡∏°‡πÅ‡∏û‡∏ó‡∏µ‡∏•‡∏∞‡πÅ‡∏û
local function teleportAndManagePlatforms(hrp)
    local currentPlatform = nil
    for i = 1, platformCount do
        local pos = getDarknessPartPos(i)
        if pos then
            local newPlatform = createPlatformAtPosition(i, pos)
            task.wait(0.2)
            hrp.CFrame = CFrame.new(newPlatform.Position + Vector3.new(0, 5, 0))
            task.wait(3)
            if currentPlatform and currentPlatform ~= newPlatform then
                currentPlatform:Destroy()
            end
            currentPlatform = newPlatform
        else
            warn("‚ùå ‡∏Ç‡πâ‡∏≤‡∏° CaveStage" .. i)
        end
    end
end

-- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö RemoteFunction InstaLoad Function
local function checkInstaLoad()
    local InstaLoad = ReplicatedStorage:FindFirstChild("InstaLoad Function")
    return InstaLoad ~= nil
end

-- TP ‡∏™‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏°‡∏≤‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á GoldenChest ‚Üî Trees[8][5] ‡∏à‡∏ô‡πÄ‡∏à‡∏≠ InstaLoad
local function tpGoldenChestAndTree(hrp)
    local goldenPos = getGoldenChestPos()
    local treesPartPos = nil

    -- ‡∏´‡∏≤ Trees[8][5].Part
    local success, pos = pcall(function()
        return workspace.BoatStages.NormalStages.TheEnd.Trees:GetChildren()[8]:GetChildren()[5].Part.Position
    end)
    if success and pos then
        treesPartPos = pos
    else
        warn("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö Trees[8][5].Part")
        return
    end

    if not goldenPos then
        warn("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö GoldenChest")
        return
    end

    print("‚è≥ ‡πÄ‡∏£‡∏¥‡πà‡∏° TP ‡∏™‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏°‡∏≤‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á GoldenChest ‚Üî Trees[8][5] ‡∏à‡∏ô‡πÄ‡∏à‡∏≠ InstaLoad Function")

    while not checkInstaLoad() do
        hrp.CFrame = CFrame.new(goldenPos + Vector3.new(0, 5, 0))
        task.wait(0.5)
        hrp.CFrame = CFrame.new(treesPartPos + Vector3.new(0, 5, 0))
        task.wait(0.5)
    end

    print("‚úÖ ‡∏û‡∏ö InstaLoad Function! ‡∏ü‡∏≤‡∏£‡πå‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ")
end

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ü‡∏≤‡∏£‡πå‡∏°‡∏´‡∏•‡∏±‡∏Å
local function farmCycle(char)
    local hrp = char:WaitForChild("HumanoidRootPart")

    while true do
        -- ‡∏ü‡∏≤‡∏£‡πå‡∏°‡πÅ‡∏û‡∏ó‡∏µ‡∏•‡∏∞‡πÅ‡∏û
        teleportAndManagePlatforms(hrp)

        -- TP ‡πÑ‡∏õ GoldenChest + ‡∏™‡∏•‡∏±‡∏ö Trees ‡∏à‡∏ô‡πÄ‡∏à‡∏≠ InstaLoad
        tpGoldenChestAndTree(hrp)

        -- ‡∏£‡∏≠‡∏Ñ‡∏á‡∏ó‡∏µ‡πà‡∏ó‡πâ‡∏≤‡∏¢‡∏£‡∏≠‡∏ö
        task.wait(fixedWaitTime)
    end
end

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡∏ü‡∏≤‡∏£‡πå‡∏°
local function startAutoFarm()
    local function onCharacterAdded(char)
        task.wait(1) -- ‡∏Å‡∏±‡∏ô error ‡∏ï‡∏≠‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏á spawn
        task.spawn(function()  -- üî• ‡∏£‡∏±‡∏ô farmCycle ‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏ö‡∏•‡πá‡∏≠‡∏Å
            farmCycle(char)
        end)
    end

    -- ‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡πâ‡∏ß
    if player.Character then
        onCharacterAdded(player.Character)
    end

    -- ‡∏Å‡∏£‡∏ì‡∏µ‡∏ï‡∏≤‡∏¢/‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ï‡∏±‡∏ß
    player.CharacterAdded:Connect(onCharacterAdded)
end

-- üî• ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
startAutoFarm()    platform.Anchored = true
    platform.Position = position
    platform.Color = Color3.fromRGB(0, 255, 255)
    platform.Material = Enum.Material.Neon
    platform.Parent = workspace
    return platform
end

-- ‡πÄ‡∏ó‡πÄ‡∏•‡∏û‡∏≠‡∏£‡πå‡∏ï‡∏Ç‡πâ‡∏≤‡∏°‡πÅ‡∏û‡∏ó‡∏µ‡∏•‡∏∞‡πÅ‡∏û
local function teleportAndManagePlatforms(hrp)
    local currentPlatform = nil
    for i = 1, platformCount do
        local pos = getDarknessPartPos(i)
        if pos then
            local newPlatform = createPlatformAtPosition(i, pos)
            task.wait(0.2)
            hrp.CFrame = CFrame.new(newPlatform.Position + Vector3.new(0, 5, 0))
            task.wait(3)
            if currentPlatform and currentPlatform ~= newPlatform then
                currentPlatform:Destroy()
            end
            currentPlatform = newPlatform
        else
            warn("‚ùå ‡∏Ç‡πâ‡∏≤‡∏° CaveStage" .. i)
        end
    end
end

-- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö RemoteFunction InstaLoad Function
local function checkInstaLoad()
    local InstaLoad = ReplicatedStorage:FindFirstChild("InstaLoad Function")
    return InstaLoad ~= nil
end

-- TP ‡∏™‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏°‡∏≤‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á GoldenChest ‚Üî Trees[8][5] ‡∏à‡∏ô‡πÄ‡∏à‡∏≠ InstaLoad
local function tpGoldenChestAndTree(hrp)
    local goldenPos = getGoldenChestPos()
    local treesPartPos = nil

    -- ‡∏´‡∏≤ Trees[8][5].Part
    local success, pos = pcall(function()
        return workspace.BoatStages.NormalStages.TheEnd.Trees:GetChildren()[8]:GetChildren()[5].Part.Position
    end)
    if success and pos then
        treesPartPos = pos
    else
        warn("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö Trees[8][5].Part")
        return
    end

    if not goldenPos then
        warn("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö GoldenChest")
        return
    end

    print("‚è≥ ‡πÄ‡∏£‡∏¥‡πà‡∏° TP ‡∏™‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏°‡∏≤‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á GoldenChest ‚Üî Trees[8][5] ‡∏à‡∏ô‡πÄ‡∏à‡∏≠ InstaLoad Function")

    while not checkInstaLoad() do
        hrp.CFrame = CFrame.new(goldenPos + Vector3.new(0, 5, 0))
        task.wait(0.5)
        hrp.CFrame = CFrame.new(treesPartPos + Vector3.new(0, 5, 0))
        task.wait(0.5)
    end

    print("‚úÖ ‡∏û‡∏ö InstaLoad Function! ‡∏ü‡∏≤‡∏£‡πå‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ")
end

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ü‡∏≤‡∏£‡πå‡∏°‡∏´‡∏•‡∏±‡∏Å
local function farmCycle(char)
    local hrp = char:WaitForChild("HumanoidRootPart")

    while true do
        -- ‡∏ü‡∏≤‡∏£‡πå‡∏°‡πÅ‡∏û‡∏ó‡∏µ‡∏•‡∏∞‡πÅ‡∏û
        teleportAndManagePlatforms(hrp)

        -- TP ‡πÑ‡∏õ GoldenChest + ‡∏™‡∏•‡∏±‡∏ö Trees ‡∏à‡∏ô‡πÄ‡∏à‡∏≠ InstaLoad
        tpGoldenChestAndTree(hrp)

        -- ‡∏£‡∏≠‡∏Ñ‡∏á‡∏ó‡∏µ‡πà‡∏ó‡πâ‡∏≤‡∏¢‡∏£‡∏≠‡∏ö
        task.wait(fixedWaitTime)
    end
end

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡∏ü‡∏≤‡∏£‡πå‡∏°
local function startAutoFarm()
    local function onCharacterAdded(char)
        task.wait(1) -- ‡∏Å‡∏±‡∏ô error ‡∏ï‡∏≠‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏á spawn
        task.spawn(function()  -- üî• ‡∏£‡∏±‡∏ô farmCycle ‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏ö‡∏•‡πá‡∏≠‡∏Å
            farmCycle(char)
        end)
    end

    -- ‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡πâ‡∏ß
    if player.Character then
        onCharacterAdded(player.Character)
    end

    -- ‡∏Å‡∏£‡∏ì‡∏µ‡∏ï‡∏≤‡∏¢/‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ï‡∏±‡∏ß
    player.CharacterAdded:Connect(onCharacterAdded)
end

-- üî• ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
startAutoFarm()    platform.Anchored = true
    platform.Position = position
    platform.Color = Color3.fromRGB(0, 255, 255)
    platform.Material = Enum.Material.Neon
    platform.Parent = workspace
    return platform
end

-- ‡πÄ‡∏ó‡πÄ‡∏•‡∏û‡∏≠‡∏£‡πå‡∏ï‡∏Ç‡πâ‡∏≤‡∏°‡πÅ‡∏û‡∏ó‡∏µ‡∏•‡∏∞‡πÅ‡∏û
local function teleportAndManagePlatforms(hrp)
    local currentPlatform = nil
    for i = 1, platformCount do
        local pos = getDarknessPartPos(i)
        if pos then
            local newPlatform = createPlatformAtPosition(i, pos)
            wait(0.2)
            hrp.CFrame = CFrame.new(newPlatform.Position + Vector3.new(0, 5, 0))
            wait(3)
            if currentPlatform and currentPlatform ~= newPlatform then
                currentPlatform:Destroy()
            end
            currentPlatform = newPlatform
        else
            warn("‚ùå ‡∏Ç‡πâ‡∏≤‡∏° CaveStage" .. i)
        end
    end
end

-- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö RemoteFunction InstaLoad Function
local function checkInstaLoad()
    local InstaLoad = ReplicatedStorage:FindFirstChild("InstaLoad Function")
    return InstaLoad ~= nil
end

-- TP ‡πÑ‡∏õ GoldenChest ‡πÅ‡∏•‡πâ‡∏ß‡∏£‡∏≠‡πÄ‡∏ß‡∏•‡∏≤‡∏Ñ‡∏á‡∏ó‡∏µ‡πà
local function tpToGoldenChest(hrp)
    local goldenPos = getGoldenChestPos()
    if not goldenPos then
        warn("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö GoldenChest")
        return
    end

    while not checkInstaLoad() do
        hrp.CFrame = CFrame.new(goldenPos + Vector3.new(0,5,0))
        wait(0.5)
    end

    print("‚úÖ ‡∏û‡∏ö InstaLoad Function! ‡∏£‡∏≠ " .. fixedWaitTime .. " ‡∏ß‡∏¥ ‡∏Å‡πà‡∏≠‡∏ô‡∏ü‡∏≤‡∏£‡πå‡∏°‡∏ï‡πà‡∏≠")
    wait(fixedWaitTime)
end

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ü‡∏≤‡∏£‡πå‡∏°‡∏´‡∏•‡∏±‡∏Å
local function farmCycle(char)
    local hrp = char:WaitForChild("HumanoidRootPart")
    
    while true do
        -- ‡∏ü‡∏≤‡∏£‡πå‡∏°‡πÅ‡∏û‡∏ó‡∏µ‡∏•‡∏∞‡πÅ‡∏û
        teleportAndManagePlatforms(hrp)
        
        -- TP ‡πÑ‡∏õ GoldenChest ‡πÅ‡∏•‡πâ‡∏ß‡∏£‡∏≠‡πÄ‡∏ß‡∏•‡∏≤‡∏Ñ‡∏á‡∏ó‡∏µ‡πà
        tpToGoldenChest(hrp)
    end
end

-- ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ü‡∏≤‡∏£‡πå‡∏°‡πÅ‡∏•‡∏∞‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö CharacterAdded
local function startAutoFarm()
    if player.Character then
        spawn(function()
            farmCycle(player.Character)
        end)
    end

    player.CharacterAdded:Connect(function(char)
        spawn(function()
            farmCycle(char)
        end)
    end)
end

startAutoFarm()
